{
	"compiler": {
		"version": "0.8.1+commit.df193b15"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "dogId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "dna",
						"type": "uint256"
					}
				],
				"name": "NewDog",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dogToOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dogs",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "dna",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "readyTime",
						"type": "uint32"
					},
					{
						"internalType": "uint16",
						"name": "generation",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"isOwner()": {
					"returns": {
						"_0": "true if `msg.sender` is the owner of the contract."
					}
				},
				"owner()": {
					"returns": {
						"_0": "the address of the owner."
					}
				},
				"renounceOwnership()": {
					"details": "Allows the current owner to relinquish control of the contract."
				},
				"transferOwnership(address)": {
					"details": "Allows the current owner to transfer control of the contract to a newOwner.",
					"params": {
						"newOwner": "The address to transfer ownership to."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"renounceOwnership()": {
					"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/CryptoDogBreeding.sol": "CryptoDogBreeding"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/CryptoDogBreeding.sol": {
			"keccak256": "0x3106d94a8ba8f4a6e6155fd80162f947b84e58fb9777ca2c8ee1a76ffb485a87",
			"license": "MIT",
			"urls": [
				"bzz-raw://7e8f7a0a2c9614953c910f4504de51310b422fdc6bd16d0bc1bfc60be4dd6acb",
				"dweb:/ipfs/QmNPoa95E8oFxJMRXQmmYJ4h5z4zyrZqfTGfpxwULHr2F3"
			]
		},
		"contracts/CryptoDogFactory.sol": {
			"keccak256": "0x093f27e781878f62cf9c6f327b0315a1ec73c58b2e7128e8c5889bb88e7e160f",
			"license": "MIT",
			"urls": [
				"bzz-raw://97771e43c9940f0a299691d9f1602c7841daf96678ce0137d376309024be2cb4",
				"dweb:/ipfs/QmP1RfpDN6nbVE3Tm68u7zvTFhCWYmbUXRKkseTXzw684D"
			]
		},
		"contracts/Ownable.sol": {
			"keccak256": "0xe46ffe64e9ca1d118ab51433ca110d53fc77ff1bbe3b16a1b748bf3b61684b27",
			"license": "MIT",
			"urls": [
				"bzz-raw://c5bb3aef29dfdfc25cbda29b54304e55ead93180b4b56a0ef0b3712866518d98",
				"dweb:/ipfs/QmfTa8mRy5JXkPWYdNTnurmyL8JBTvZK2t898n3Qpgp8Wm"
			]
		},
		"contracts/SafeMath.sol": {
			"keccak256": "0x2056d4350f9a588ec201813532355f39a7d2c892c3444845f8ac2799efe116aa",
			"license": "MIT",
			"urls": [
				"bzz-raw://a3de1a4da4382ddd24b586d560b7e0d836ae97d4a39ccc41569a675291adbb09",
				"dweb:/ipfs/QmYGpv5anR8HymSuv95AVfHpRRHwpGAZfK9ncvKYuYgjK1"
			]
		}
	},
	"version": 1
}